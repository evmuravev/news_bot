import logging
from telegram import Update
from telegram.ext import ContextTypes
from db.repositories.news import NewsRepository
from db.tasks import get_repository
from handlers.create_news.common import (
    Steps,
    get_next_step,
    get_previous_step
)
from models.news import NewsStatus, NewsUpdate


logger = logging.getLogger()


async def set_image_step(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE,
):
    news_repo: NewsRepository = get_repository(NewsRepository, context)
    news = await news_repo.get_last_news_by_user_id(user_id=context._user_id)
    news_update = {
        'image': None,
        'status': NewsStatus.partially_completed
    }
    await news_repo.update_news(
        news_update=NewsUpdate(**news_update),
        news_id=news.id,
    )

    await context.bot.send_message(
        chat_id=update.effective_user.id,
        text="""
üñº *–û—Ç–ª–∏—á–Ω–æ\! –¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–∞–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å, –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤–∏–¥–µ–æ*
\n_–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—É–¥—É—â–∏–π —à–∞–≥ –Ω–∞–∂–º–∏—Ç–µ_    ‚Ü™/back
\n_–¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –Ω–∞–∂–º–∏—Ç–µ_    ‚è©/skip
""",
        parse_mode="MarkdownV2",
    )
    return Steps.IMAGE


async def set_image(update: Update, context: ContextTypes.DEFAULT_TYPE):
    image = update.message.photo[0].file_id

    news_repo: NewsRepository = get_repository(NewsRepository, context)
    news = await news_repo.get_last_news_by_user_id(user_id=context._user_id)
    news_update = {'image': image}
    await news_repo.update_news(
        news_update=NewsUpdate(**news_update),
        news_id=news.id
    )
    await update.message.reply_text(
        "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ",
    )

    next_step = get_next_step(Steps.IMAGE)
    return await next_step(update, context)


async def not_image(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(
        chat_id=update.effective_user.id,
        text="""
üñº *–ù–∞ —ç—Ç–æ–º —à–∞–≥–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\! –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç\, —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É*
\n_–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—É–¥—É—â–∏–π —à–∞–≥ –Ω–∞–∂–º–∏—Ç–µ_    ‚Ü™/back
\n_–¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞ –Ω–∞–∂–º–∏—Ç–µ_    ‚è©/skip
""",
        parse_mode="MarkdownV2",
    )
    return Steps.IMAGE


async def image_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    previous_step = get_previous_step(Steps.IMAGE)
    return await previous_step(update, context)


async def image_skip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    next_step = get_next_step(Steps.IMAGE_SKIP)
    return await next_step(update, context)
